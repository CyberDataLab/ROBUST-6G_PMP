# sudo docker compose up -d
# sudo docker exec -it IDCONTAINER bash
---
services:
  kafka:
    image: apache/kafka:3.9.0
    container_name: kafka
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "29092"] #bash -lc 'kafka-topics.sh --bootstrap-server localhost:29092 --list >/dev/null 2>&1'
      interval: 5s
      retries: 15
      start_period: 10s
      timeout: 3s
    environment:
      TZ: "UTC"
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      # BROKER for internal connections and EXTERNAL for external connection
      KAFKA_LISTENERS: >
        BROKER://0.0.0.0:29092,
        EXTERNAL://0.0.0.0:9092,
        CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: >
        BROKER://kafka:29092,
        EXTERNAL://localhost:9092,
        CONTROLLER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >
        BROKER:PLAINTEXT,
        EXTERNAL:PLAINTEXT,
        CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: BROKER
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_DEFAULT_REPLICATION_FACTOR: "1"
      KAFKA_NUM_PARTITIONS: "1"
    ports:
      - "9092:9092"
      - "29092:29092" # To Kafkacat

  filebeat:
    image: elastic/filebeat:8.16.2
    container_name: filebeat
    environment:
      - TZ=UTC
    depends_on:
      - kafka
    volumes:
      - ${PFD}/Communication_Bus/Configuration_Files/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ${PFD}/Results/fluentd_logs:/fluentd/log:ro
      - ${PFD}/Results/tshark/traces:/tshark/traces:ro
      - ${PFD}/Results/falco/logs:/falco/logs:ro
    restart: unless-stopped
    user: root

  tshark:
    image: tshark_robust6g:latest
    container_name: tshark
    restart: unless-stopped
    depends_on:
      - kafka
    environment:
      - TZ=UTC
    network_mode: "${NETWORK_MODE}" # Allows container to see host interfaces
    cap_add:
      # https://man7.org/linux/man-pages/man7/capabilities.7.html
      - NET_ADMIN # Modify network interfaces and adjust iptables rules
      - NET_RAW   # Capture packets without restrictions
    volumes:
      - ${PFD}/Results/tshark/traces:/data/traces # Tshark logs accessible to Filebeat
      - /sys/class/net:/sys/class/net    # Allows script to see host interfaces

  alert_module:
    image: alert_module_robust6g:latest
    container_name: alert_module
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - TZ=UTC
    network_mode: host # Allows container to see host interfaces
    cap_add: #-> seguramente se borre
      # https://man7.org/linux/man-pages/man7/capabilities.7.html
      - NET_ADMIN # Modify network interfaces and adjust iptables rules
      - NET_RAW   # Capture packets without restrictions
    volumes: #local_folder : #container_folder
      - ${PFD}/Results/Alerts:/home/Alert_Module/Alerts
      - /sys/class/net:/sys/class/net    # Allows script to see host interfaces -> quitarlo seguramente porque no va a ser necesario para snort solo
